{
  "name": "logfilestream",
  "version": "1.0.2",
  "description": "Log file stream, including auto rolling feature, support multiprocess `append` write at the same time. ",
  "main": "index.js",
  "files": [
    "index.js"
  ],
  "scripts": {
    "test": "mocha -R spec -t 5000 test/*.test.js",
    "cov": "istanbul cover node_modules/.bin/_mocha -- -t 5000 test/*.test.js",
    "ci": "npm run cov",
    "jshint": "jshint ."
  },
  "config": {
    "cov": {
      "threshold": 98
    }
  },
  "homepage": "https://github.com/node-modules/logfilestream",
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/logfilestream.git"
  },
  "bugs": {
    "url": "https://github.com/node-modules/logfilestream/issues"
  },
  "keywords": [
    "logfile",
    "logfilestream",
    "logstream",
    "logging",
    "log",
    "stream",
    "writestream",
    "log4js"
  ],
  "author": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com"
  },
  "dependencies": {
    "iconv-lite": "^0.4.13",
    "mkdirp": "^0.5.1",
    "moment": "^2.11.2"
  },
  "devDependencies": {
    "contributors": "*",
    "egg-ci": "1",
    "istanbul": "*",
    "mocha": "*",
    "should": "4"
  },
  "ci": {
    "version": "4, 6"
  },
  "license": "MIT",
  "readme": "logfilestream\n=========\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][cov-image]][cov-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/logfilestream.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/logfilestream\n[travis-image]: https://img.shields.io/travis/node-modules/logfilestream.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/logfilestream\n[cov-image]: http://codecov.io/github/node-modules/logfilestream/coverage.svg?branch=master\n[cov-url]: http://codecov.io/github/node-modules/logfilestream?branch=master\n[david-image]: https://img.shields.io/david/node-modules/logfilestream.svg?style=flat-square\n[david-url]: https://david-dm.org/node-modules/logfilestream\n[snyk-image]: https://snyk.io/test/npm/logfilestream/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/logfilestream\n[download-image]: https://img.shields.io/npm/dm/logfilestream.svg?style=flat-square\n[download-url]: https://npmjs.org/package/logfilestream\n\nLog file stream, including auto rolling feature, support multiprocess `append` write at the same time.\n\n## Install\n\n```sh\n$ npm i logfilestream --save\n```\n\n## Usage\n\n```js\nvar writestream = logfilestream({\n  logdir: '/tmp/logs',\n  nameformat: '[info.]YYYY-MM-DD[.log]',\n});\n\nwritestream.write('hello');\nwritestream.write(' world\\n');\nwritestream.end();\n```\n\n## Options\n\n```js\n/**\n * Log stream, auto cut the log file.\n *\n * log file name is concat with `prename + format + ext`.\n *\n * @param  {Object} options\n *  - {String} logdir, this dir must exists.\n *  - {String} nameformat, default is '[info.]YYYY-MM-DD[.log]',\n *    @see moment().format(): http://momentjs.com/docs/#/displaying/format/\n *    Also support '{pid}' for process pid.\n *  - {String} [encoding], default is utf-8, other encoding will encode by iconv-lite\n *  - {Number} [duration], default is one houre(24 * 3600000 ms), must >= 60s.\n *  - {String} [mode], default is '0666'.\n *  - {Number} [buffer] buffer duration, default is 1000ms\n *  - {Boolean} [mkdir] try to mkdir in each cut, make sure dir exist.\n *    useful when your nameformat like 'YYYY/MM/DD/[info.log]'.\n * return {LogStream}\n */\n```\n\n## License\n\n(The MIT License)\n\nCopyright(c) 2012 - 2014 fengmk2 <fengmk2@gmail.com>.\nCopyright(c) node-modules and other contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "logfilestream@1.0.2",
  "dist": {
    "shasum": "4828234c9fe80bd372f0ca5fde7698fcfa2f30dc"
  },
  "_from": "logfilestream@^1.0.1",
  "_resolved": "https://registry.npmjs.org/logfilestream/-/logfilestream-1.0.2.tgz"
}
