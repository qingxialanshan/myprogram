{
  "name": "mini-logger",
  "version": "1.1.1",
  "description": "A really simple logger for web server or others",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "logger",
    "error",
    "custom",
    "stream",
    "file"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:node-modules/mini-logger.git"
  },
  "author": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "license": "MIT",
  "devDependencies": {
    "istanbul": "^0.3.0",
    "mkdirp": "^0.5.0",
    "mm": "^0.2.1",
    "mocha": "2",
    "rimraf": "2",
    "should": "4"
  },
  "dependencies": {
    "utility": "^1.8.0",
    "copy-to": "^1.0.1",
    "error-formatter": "^1.0.3",
    "iconv-lite": "~0.4.4",
    "logfilestream": "^1.0.1",
    "ms": "^0.7.1",
    "sdk-base": "^1.0.0"
  },
  "files": [
    "index.js"
  ],
  "readme": "mini-logger\n------------\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Coveralls][coveralls-image]][coveralls-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/mini-logger.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/mini-logger\n[travis-image]: https://img.shields.io/travis/node-modules/mini-logger.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/mini-logger\n[coveralls-image]: https://img.shields.io/coveralls/node-modules/mini-logger.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/node-modules/mini-logger?branch=master\n[david-image]: https://img.shields.io/david/node-modules/mini-logger.svg?style=flat-square\n[david-url]: https://david-dm.org/node-modules/mini-logger\n[snyk-image]: https://snyk.io/test/npm/mini-logger/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/mini-logger\n[download-image]: https://img.shields.io/npm/dm/mini-logger.svg?style=flat-square\n[download-url]: https://npmjs.org/package/mini-logger\n\nA really simple logger for web server or others.\n\n## Install\n\n```bash\nnpm install mini-logger\n```\n\n## Goal\n\nLog levels for logger is useless. Just let [debug](https://github.com/visionmedia/debug) module handle the debug log. All you need is error log and some custom categories. `mini-logger` just write logs into different files or stdout, do not care formats(only format Errors and Objects).\n\n## Features\n\n* rolling log files based on datetime\n* easy to extended\n* custom categories\n* encoding support\n* support Error / Object format\n\n## Usage\n\n### Example\n\n```js\nvar path = require('path');\nvar Logger = require('mini-logger');\nvar logger = Logger({\n  dir: path.join(__dirname, 'logs'),\n  categories: [ 'http' ],\n  format: '[{category}.]YYYY-MM-DD[.log]'\n});\n\nlogger.error(new Error('error'));\nlogger.http('http request url: %s', 'https://github.com');\n```\n\n### Options\n\n* **dir**: log directory path, required.\n* **categories**: custom categories, all categories will add a method to Logger's instance\n* **format**: log file name's format, will pase to momentjs to format. `{category}` will replace with logger category, default is `[{category.}]YYYY-MM-DD[.log]`\n* **stdout**: write logs into stdout, default is `false`\n* **file**: write logs into file, default is `true`\n* **errorFormater**: formater for errors, default is [error-formater](https://github.com/node-modules/error-formater)\n* **seperator**: the seperator of each line of logs, default is `os.EOL + os.EOL`\n* **encoding**: output logs' encoding, default is `utf-8`\n* **flushInterval**: all logs will cache in memory first, every `flushInterval` ms flush into files. default is `1s`\n* **duration**: cut the logs every `duration` ms. default is `1h`\n* **mkdir**: everytime before create a writeStream, will try to `mkdirp` first. useful when format is like `YYYY/MM/DD/[{category}.log]`, default to false\n* **timestamp**: write timestamp with format YYYYMMDDHHmmssSSS before every line of logs, default is false\n\n### Events\n\nLogger will emit an error event when any write streams emit an error. If you don't listen this `error` event, it will default hanlde by:\n\n```js\nfunction onerror(err) {\n  console.error(err.stack);\n}\n```\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/node-modules/mini-logger/issues"
  },
  "homepage": "https://github.com/node-modules/mini-logger",
  "_id": "mini-logger@1.1.1",
  "dist": {
    "shasum": "5b2f463690de1212b836d77146c96a80ff52df6a"
  },
  "_from": "mini-logger@^1.1",
  "_resolved": "https://registry.npmjs.org/mini-logger/-/mini-logger-1.1.1.tgz"
}
